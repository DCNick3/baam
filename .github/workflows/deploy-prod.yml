on:
  push:
    branches:
      - master
  pull_request:

name: Deploy to prod

# TODO: build container

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://baam.dcnick3.me
    steps:
      - uses: actions/checkout@v1

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Build container'
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: 'ghcr.io/dcnick3/baam:ref-${{ github.sha }}'
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - if: steps.extract_branch.outputs.branch == 'master'
        name: 'Deploy'
        uses: 'glopezep/helm@v1.7.1'
        with:
          release: 'prod'
          namespace: 'baam'
          chart: 'deployment'
          helm: 'helm3'
          token: '${{ github.token }}'
          values: |
            domain: baam.dcnick3.me
            env: prod
            dockerTag: ref-${{ github.sha }}
            pullPolicy: Always
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

      - if: steps.extract_branch.outputs.branch != 'master'
        name: 'Deploy'
        uses: 'glopezep/helm@v1.7.1'
        with:
          release: 'br-${{steps.extract_branch.outputs.branch}}'
          namespace: 'baam'
          chart: 'deployment'
          helm: 'helm3'
          token: '${{ github.token }}'
          values: |
            domain: baam.dcnick3.me
            env: br-${{steps.extract_branch.outputs.branch}}
            dockerTag: ref-${{ github.sha }}
            pullPolicy: Always
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
